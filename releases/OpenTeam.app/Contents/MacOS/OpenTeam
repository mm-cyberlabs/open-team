#!/bin/bash

# OpenTeam Portable App Launcher
# This script ensures proper startup with logging and error handling

# Get the directory where this script is located
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
APP_DIR="$(dirname "$(dirname "$SCRIPT_DIR")")"
CONTENTS_DIR="$APP_DIR/Contents"
JAVA_DIR="$CONTENTS_DIR/Java"
RUNTIME_DIR="$CONTENTS_DIR/runtime"

# Ensure ~/.openteam directory structure exists
OPENTEAM_DIR="$HOME/.openteam"
LOGS_DIR="$OPENTEAM_DIR/logs"

echo "Creating OpenTeam directories..."
mkdir -p "$LOGS_DIR"

# Set up logging
LOG_FILE="$LOGS_DIR/openteam-$(date +%Y%m%d-%H%M%S).log"

# Function to log messages
log_message() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') $1" | tee -a "$LOG_FILE"
}

log_message "=== OpenTeam Portable App Starting ==="
log_message "App directory: $APP_DIR"
log_message "Java runtime: $RUNTIME_DIR"
log_message "Main JAR: $JAVA_DIR/OpenTeam.jar"
log_message "Log file: $LOG_FILE"

# Check if embedded runtime exists
JAVA_EXECUTABLE="$RUNTIME_DIR/bin/java"
if [ ! -f "$JAVA_EXECUTABLE" ]; then
    log_message "ERROR: Embedded Java runtime not found at: $JAVA_EXECUTABLE"
    exit 1
fi

log_message "Using embedded Java runtime: $JAVA_EXECUTABLE"

# Check if main JAR exists
MAIN_JAR="$JAVA_DIR/OpenTeam.jar"
if [ ! -f "$MAIN_JAR" ]; then
    log_message "ERROR: Main application JAR not found at: $MAIN_JAR"
    exit 1
fi

# Check if config file exists
CONFIG_FILE="$OPENTEAM_DIR/config.yml"
if [ ! -f "$CONFIG_FILE" ]; then
    log_message "WARNING: Configuration file not found at: $CONFIG_FILE"
    log_message "Please create ~/.openteam/config.yml with your database settings"
fi

log_message "Starting OpenTeam application..."

# Check if we have the JavaFX JARs in the lib directory - use them if available
JAVAFX_PATH=""
if [ -d "$JAVA_DIR/lib" ]; then
    JAVAFX_JARS=$(ls "$JAVA_DIR/lib"/javafx-*-mac-aarch64.jar 2>/dev/null | tr '\n' ':')
    if [ -n "$JAVAFX_JARS" ]; then
        log_message "Found platform-specific JavaFX JARs, using module path approach"
        JAVAFX_PATH="--module-path $JAVAFX_JARS --add-modules javafx.controls,javafx.fxml"
    fi
fi

if [ -z "$JAVAFX_PATH" ]; then
    log_message "Using shaded JAR approach for JavaFX"
fi

log_message "JavaFX configuration: $JAVAFX_PATH"

# Launch the application with proper configuration
exec "$JAVA_EXECUTABLE" \
    -Xms256m \
    -Xmx1024m \
    -Dfile.encoding=UTF-8 \
    -Djava.awt.headless=false \
    -Dprism.order=sw,es2,d3d \
    -Dprism.allowhidpi=true \
    -Dlogback.configurationFile="$JAVA_DIR/logback.xml" \
    --add-opens=java.base/java.lang.reflect=ALL-UNNAMED \
    --add-opens=java.base/java.lang=ALL-UNNAMED \
    --add-opens=java.base/java.text=ALL-UNNAMED \
    --add-opens=java.base/java.util=ALL-UNNAMED \
    --add-opens=java.desktop/java.awt.font=ALL-UNNAMED \
    $JAVAFX_PATH \
    -jar "$MAIN_JAR" \
    >> "$LOG_FILE" 2>&1
